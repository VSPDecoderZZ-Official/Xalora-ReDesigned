#----------------------------------
# Basic Heliactyl configuration
#----------------------------------
name: Heliactyl
timezone: Europe/London
platform_human_name: Heliactyl Next (Aeolus Ridge)   # 3rd generation Heliactyl Next
platform_codename: Aeolus                            # Modules under "aeolus"
platform_level: 101
version: 3.0.0

#----------------------------------
# Cluster system
#----------------------------------
# This is an experimental feature, please use with caution.
# You should use 1 cluster per CPU core ideally, anything above 48 is not recommended.
# Important: The first cluster is the master and will be used for executing tasks ...
# and if you want a single cluster, set the number to 2.
#----------------------------------
clusters: 2

#----------------------------------
# Database configuration
#----------------------------------
provider: prisma

#----------------------------------
# Pterodactyl panel settings
#----------------------------------
pterodactyl:
  domain: https://myhost.domain
  key: ptla_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

  #----------------------------------
  # Pterodactyl client API
  #----------------------------------
  # This is a fairly recent addition to Heliactyl, please use with caution.
  # Heliactyl Next can completely replace Pterodactyl for the actions such as managing servers, files, etc.
  #
  # If you are going ahead with this approach, we recommend locking down the normal Pterodactyl panel to only being used for ...
  # the the API and admin area.
  #----------------------------------
  client_key: ptlc_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#----------------------------------
# Website configuration
#----------------------------------
website:
  port: 3000
  secret: MYVERYNOTSECURESECRET
  domain: https://client.myhost.domain

#----------------------------------
# API and client settings
#----------------------------------
api:
  email:
    #----------------------------------
    # Required for OAuth2: Resend API key
    # Don't worry, you can get one for free at https://resend.com
    #
    # This allows Heliactyl Next to send emails to users when they sign up, reset their password, etc.
    #----------------------------------
    resend: "re_00000000000000000000000000000000"
    from: "noreply@myhost.domain"

  client:
    #----------------------------------
    # reCAPTCHA configuration - Required for user/password authentication
    #----------------------------------
    recaptcha:
      secret: RECAPTCHA_SECRET
      sitekey: RECAPTCHA_SITEKEY

    #----------------------------------
    # Heliactyl API
    #----------------------------------
    api:
      enabled: true
      code: MYAPIKEY

    #----------------------------------
    # Join for Rewards configuration
    #----------------------------------
    j4r:
      enabled: true
      ads:
        - name: Example server 1
          invite: https://discord.gg/example
          id: "123456789123456789"
          coins: 300

    #----------------------------------
    # Discord bot configuration
    #----------------------------------
    bot:
      token: DISCORDBOTTOKEN
      joinguild:
        _comment: "The Discord bot must be in these servers and have invite permissions."
        enabled: true
        guildid:
          - "00000000000000000000"
      giverole:
        _comment: "Auto-join must be enabled for this to work"
        enabled: true
        guildid: "00000000000000000000"
        roleid: "00000000000000000000"

    #----------------------------------
    # User registration and security settings
    #----------------------------------
    passwordgenerator:
      signup: true
      note: "Use this to disable registering on Heliactyl."
      length: 24

    #----------------------------------
    # Feature toggles
    #----------------------------------
    allow:
      newusers: true
      regen: true
      overresourcessuspend: false
      server:
        create: true
        modify: true
        delete: true

    #----------------------------------
    # OAuth2 Configuration
    #----------------------------------
    # Due to the age of this part of Heliactyl, Discord OAuth2 cannot be disabled. This will be available in the future.
    #----------------------------------
    oauth2:
      #----------------------------------
      # OAuth providers
      #----------------------------------
      discord:
        enabled: true
        id: "00000000000000000000"
        secret: xxxxxxxxxxxxxxxxxxxxxxxx
        link: https://client.mydomain.com
        callbackpath: /callback
        prompt: true
      google:
        enabled: true
        id: xxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com
        secret: xxxxxxxxxxxxxxxxxxx
        link: https://client.mydomain.com
        callbackpath: /auth/google/callback
      github:
        enabled: true
        id: xxxxxxxxxxxxxxxxxxx
        secret: xxxxxxxxxxxxxxxxxxx
        link: https://client.mydomain.com
        callbackpath: /auth/github/callback

    #----------------------------------
    # IP and security settings
    #----------------------------------
    ip:
      trust x-forwarded-for: true
      block: []
      duplicate check: false
      _note: "Anti-alt checks will not work if using Cloudflare"

    #----------------------------------
    # Rate limiting configuration
    #----------------------------------
    ratelimits:
      /callback: 2
      /create: 1
      /delete: 1
      /modify: 1
      /updateinfo: 1
      /setplan: 2
      /admin: 1
      /regen: 1
      /renew: 1
      /api/userinfo: 1

    #----------------------------------
    # Server package configurations
    #----------------------------------
    packages:
      default: default
      list:
        default:
          ram: 4096
          disk: 30720
          cpu: 150
          servers: 8
      rolePackages:
        note: "Package assignments based on Discord roles"
        roleServer: "000000000000000000"
        roles:
          "000000000000000000": "default"

    #----------------------------------
    # Server locations
    #----------------------------------
    locations:
      "1":
        name: Example Location
        pro: false

    #----------------------------------
    # Display Locations
    #----------------------------------
    # These are the locations that will be displayed to the user.
    # You can include a country, flag, hardware information, etc.
    #----------------------------------
    display_locations:
      - name: Example Location
        country: United States
        id: 1 # This should be the same as the location ID in the locations section.
        flag: https://cdn-icons-png.flaticon.com/512/9906/9906534.png
        region: us-west1
        nodes: ["US01"]
        capacity: 200
        cpu: "Dual Intel Xeon 5150"
        storage: "1TB HDD, 240GB SATA SSD"

    #----------------------------------
    # Available server types/eggs
    #----------------------------------
    eggs:
      purpur:
        display: Minecraft - Purpur
        minimum:
          ram: 1024
          disk: 1024
          cpu: 100
        maximum: {}
        info:
          egg: 1
          docker_image: ghcr.io/zenllc/java:21
          startup: java -Xms256M -Xmx{{SERVER_MEMORY}}M {{JAVA_ARGUMENTS}} -jar {{SERVER_JARFILE}}
          environment:
            SERVER_JARFILE: server.jar
            BUILD_NUMBER: latest
            JAVA_ARGUMENTS: >-
              --add-modules=jdk.incubator.vector -XX:+UseG1GC -XX:+ParallelRefProcEnabled 
              -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC 
              -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 
              -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 
              -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 
              -Dusing.aikars.flags=https://mcflags.emc.gs/ -Daikars.new.flags=true 
              -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M 
              -XX:G1ReservePercent=20 --add-modules=jdk.incubator.vector
          feature_limits:
            databases: 4
            backups: 4

#----------------------------------
# Anti-VPN configuration
#----------------------------------
antivpn:
  status: false
  APIKey: Proxycheck API Key
  whitelistedIPs:
    - IP address

#----------------------------------
# User whitelist configuration
#----------------------------------
whitelist:
  status: false
  users:
    - User ID

#----------------------------------
# Logging configuration
#----------------------------------
logging:
  _note: "3rd-generation logging system"
  status: true
  webhook: https://discord.com/api/webhooks/WEBHOOK
  actions:
    user:
      signup: true
      create server: true
      gifted coins: true
      modify server: true
      buy servers: true
      buy ram: true
      buy cpu: true
      buy disk: true
    admin:
      set coins: true
      add coins: true
      set resources: true
      set plan: true
      create coupon: true
      revoke coupon: true
      remove account: true
      view ip: true

#----------------------------------
# AFK system configuration
#----------------------------------
afk:
  _note: "4th-generation AFK system"
  path: ws
  every: 60
  coins: 2.5
  enabled: true

#----------------------------------
# Debugging configuration
#----------------------------------
debug:
  database: false

#----------------------------------
# Coins configuration
#----------------------------------
coins:
  enabled: true

#----------------------------------
# Renew bypass configuration
#----------------------------------
# This is a list of users who will be able to bypass the renew limit. 
#----------------------------------
renewbypass:
  users:
    - 000000000000000000

#----------------------------------
# Server renewal
#----------------------------------
renew:
  time: 48 # Renewal period in hours
  warning: 24 # Warning period in hours. ex: countdown is 48 hours, they can renew at the 24 hour mark.
  interval: 5 # Check interval in minutes

# Store configuration
#----------------------------------
store:
  enabled: true
  ram:
    cost: 300
    per: 1024
  disk:
    cost: 300
    per: 5120
  cpu:
    cost: 300
    per: 100
  servers:
    cost: 300
    per: 1

#----------------------------------
# Redis configuration
#----------------------------------
sessions:
  provider: sqlite # Options: redis, sqlite (legacy)
  redis:
    host: 127.0.0.1
    port: 6379
    password: "" # Leave blank if no password is set (which is the default)
