
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pluto</title>
    <script src="https://cdn.tailwindcss.com?plugins=forms"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Cabin:ital,wght@0,400..700;1,400..700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Cabin', sans-serif;
        }
@font-face {
  font-family: 'Poppins';
  src: local('Cabin'), local('Cabin-Regular');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Poppins';
  src: local('Cabin Italic'), local('Cabin-Italic');
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: 'Poppins';
  src: local('Cabin Bold'), local('Cabin-Bold');
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Poppins';
  src: local('Cabin Bold Italic'), local('Cabin-BoldItalic');
  font-weight: bold;
  font-style: italic;
}
.active {
    background-color: rgba(255, 255, 255, 0.05);
    color: #ffffff;
}
    </style>
</head>
<body class="text-white">

        <!-- Sidebar -->
        <%- include('./components/sidebar') %>
        
                
                    <!-- Content -->
<!-- Main Content -->
<main class="flex-grow container mx-auto px-4 py-8">
    <div class="flex justify-between items-center w-full mx-auto pb-4">
        <!-- Welcome text and subtext on the left -->
        <div class="flex flex-col">
            <h1 class="text-xl font-semibold mb-0.5" style="font-family: 'Cabin';">Servers</h1>
            <p class="text-gray-400 text-md">An overview of your servers.</p>
        </div>

        <!-- Breadcrumbs on the right -->
        <nav aria-label="Breadcrumb" class="inline-flex py-2 px-4 rounded-xl bg-white/5 transition-colors duration-200">
            <ol role="list" class="flex items-center space-x-2">
                <li>
                    <a href="#_" class="text-sm flex items-center gap-2 text-zinc-400 hover:text-zinc-200 transition-colors duration-200" aria-current="false">
                        <svg
                            aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            class="icon icon-tabler size-4 icons-tabler-outline icon-tabler-home"
                        >
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M5 12l-2 0l9 -9l9 9l-2 0"></path>
                            <path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7"></path>
                            <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6"></path>
                        </svg>
                        <span>Home</span>
                    </a>
                </li>
                <li class="flex items-center">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        class="icon icon-tabler icons-tabler-outline icon-tabler-chevron-right size-4 text-zinc-400"
                    >
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M9 6l6 6l-6 6"></path>
                    </svg>
                </li>
                <li>
                    <a href="#_" class="text-sm flex items-center gap-2 font-medium text-white/80 hover:text-white transition-colors duration-200" aria-current="page">
                        Servers
                    </a>
                </li>
            </ol>
        </nav>
    </div>

    <!-- Content -->
    

    <!-- Servers List -->
    <div class="mt-4">
        <div class="verflow-hidden">
            <div>
                <div class="flex flex-col sm:flex-row sm:items-center gap-4">
                    <div class="relative w-full">
                        <h3 class="text-md font-semibold leading-6 text-white" style="font-family: 'Cabin'">All servers</h3>
                    </div>
                    <div class="sm:ml-auto sm:flex-none flex gap-2">
                        <a href="/servers/new" class="hover:scale-95 flex items-center justify-center h-11 gap-2 px-5 text-sm font-medium text-white transition-all duration-200 rounded-full shadow bg-orange-600 hover:bg-orange-700 transition focus:ring-2 focus:ring-orange-800 focus:ring-offset-2 ring-offset-gray-200 hover:shadow-none">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-plus size-4">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M12 5l0 14"></path>
                                <path d="M5 12l14 0"></path>
                            </svg>
                            New Server
                        </a>
                    </div>
                </div>
            </div>
            
            <!-- Server Cards -->
<div class="mt-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
    <% if (pterodactyl && pterodactyl.relationships && pterodactyl.relationships.servers && pterodactyl.relationships.servers.data && pterodactyl.relationships.servers.data.length === 0) { %>
        <h4 class="text-lg font-semibold text-white mb-1">No Servers Yet!</h4>
    <% } else if (pterodactyl && pterodactyl.relationships && pterodactyl.relationships.servers && pterodactyl.relationships.servers.data) { %>
        <% for (let i = 0, len = pterodactyl.relationships.servers.data.length; i < len; i++) { %> 
            <div class="bg-white/5 rounded-2xl overflow-hidden shadow-none hover:shadow-lg transition-shadow duration-300">
                <div class="p-6">
                    <h4 class="text-lg font-semibold text-white mb-1">
                        <%= pterodactyl.relationships.servers.data[i].attributes.name.length > 40 ? pterodactyl.relationships.servers.data[i].attributes.name.slice(0, 40) + "..." : pterodactyl.relationships.servers.data[i].attributes.name %>
                    </h4>
                    <p class="text-xs text-gray-300 mb-6">Server ID: <%= pterodactyl.relationships.servers.data[i].attributes.identifier %></p>
                    <div class="flex flex-wrap gap-2 mb-4">
                        <span class="px-2 py-1 text-xs font-semibold rounded-lg bg-white/10 text-gray-100">
                            <%= pterodactyl.relationships.servers.data[i].attributes.limits.memory / 1024 %> GiB RAM
                        </span>
                        <span class="px-2 py-1 text-xs font-semibold rounded-lg bg-white/10 text-gray-100">
                            <%= pterodactyl.relationships.servers.data[i].attributes.limits.cpu / 100 %> CPU core(s)
                        </span>
                        <span class="px-2 py-1 text-xs font-semibold rounded-lg bg-white/10 text-gray-100">
                            <%= pterodactyl.relationships.servers.data[i].attributes.limits.disk / 1024 %> GiB disk
                        </span>
                    </div>
                    <a href="/servers/edit?id=<%= pterodactyl.relationships.servers.data[i].attributes.id %>" class="transition hover:scale-95 block w-full text-center bg-orange-600 text-sm hover:bg-orange-700 text-white font-medium py-2 px-4 rounded-full">
                        Edit Server
                    </a>
                </div>
            </div>
        <% } %>
    <% } else { %>
        <h4 class="text-lg font-semibold text-white mb-1">No Server Data Available!</h4>
    <% } %>
</div>
        </div>
    </div>
</main>

        <!-- Footer -->
        <footer class="py-4">
            <div class="container mx-auto px-4 text-center text-gray-400 text-sm">
                <span>Â© 2017 - 2024 SRYDEN, Inc.</span>
            </div>
        </footer>
    </div>

    <script>
        // Function to highlight the active tab
        function setActiveTab() {
            const currentPath = window.location.pathname;
            const tabs = document.querySelectorAll('#tabs a');
            tabs.forEach(tab => {
                if (tab.getAttribute('href') === currentPath) {
                    tab.classList.add('border-orange-500', 'text-orange-500', 'font-medium');
                    tab.classList.remove('border-transparent', 'hover:border-gray-300', 'hover:text-white');
                } else {
                    tab.classList.remove('border-orange-500', 'text-orange-500', 'font-medium');
                    tab.classList.add('border-transparent', 'hover:border-gray-300', 'hover:text-white');
                }
            });
        }

        // Set active tab on page load
        setActiveTab();

        // For demonstration purposes, simulate changing routes when clicking tabs
        document.querySelectorAll('#tabs a').forEach(tab => {
            tab.addEventListener('click', (e) => {
                e.preventDefault();
                const href = e.currentTarget.getAttribute('href');
                history.pushState(null, '', href);
                window.location.href = href;
                setActiveTab();
            });
        });

        // Listen for popstate events (back/forward browser navigation)
        window.addEventListener('popstate', setActiveTab);
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'8d17edb95e9391bf',t:'MTcyODc0NDkwMy4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
<script>
    var options = {
      classname: 'loadingbar',
      id: 'loadingbar'
    };
    var nanobar = new Nanobar(options);
    function simulateLoading() {
      nanobar.go(10); // Change this value to control the loading speed
      setTimeout(function() {
        nanobar.go(50);
      }, 190); // Delay the progress update
      setTimeout(function() {
        nanobar.go(100);
      }, 400); // Another delay
    }
    simulateLoading();
  </script>
  <style>
    .loadingbar .bar {
      background: #fb923c;
      -webkit-box-shadow: 0px 4px 38px -15px #fb923c;
      -moz-box-shadow: 0px 4px 38px -15px #fb923c;
      box-shadow: 0px 4px 38px -15px #fb923c;
      height: 1.85px;
    }
  </style>
  <script>
    let balance = document.getElementById("balance");
    balance.textContent = <%= Math.floor(coins * 100) / 100 %>;
  </script>